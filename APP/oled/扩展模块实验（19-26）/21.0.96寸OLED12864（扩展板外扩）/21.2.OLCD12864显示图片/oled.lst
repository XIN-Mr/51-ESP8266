C51 COMPILER V9.01   OLED                                                                  10/31/2018 18:52:45 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\oled.lst)
                    - TABS(2) OBJECT(oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          
   5          
   6          // OLED的I2C接口定义
   7          sbit OLED_SCL = P2^1;   //时钟SCL
   8          sbit OLED_SDIN = P2^0;    //数据SDA
   9          
  10          
  11          
  12          /**********************************************
  13          //IIC Start
  14          **********************************************/
  15          void IIC_Start()
  16          {
  17   1        OLED_SCLK_Set();
  18   1        OLED_SDIN_Set();
  19   1        OLED_SDIN_Clr();
  20   1        OLED_SCLK_Clr();
  21   1      }
  22          
  23          /**********************************************
  24          //IIC Stop
  25          **********************************************/
  26          void IIC_Stop()
  27          {
  28   1        OLED_SCLK_Set();
  29   1      //  OLED_SCLK_Clr();
  30   1        OLED_SDIN_Clr();
  31   1        OLED_SDIN_Set();
  32   1        
  33   1      }
  34          
  35          void IIC_Wait_Ack()
  36          {
  37   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  38   1        //GPIOB->CRH |= 0x00080000;
  39   1      //  OLED_SDA = 1;
  40   1      //  delay_us(1);
  41   1        //OLED_SCL = 1;
  42   1        //delay_us(50000);
  43   1      /*  while(1)
  44   1        {
  45   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  46   1          {
  47   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  48   1            //GPIOB->CRH |= 0x00030000;
  49   1            return;
  50   1          }
  51   1        }
  52   1      */
  53   1        OLED_SCLK_Set() ;
  54   1        OLED_SCLK_Clr();
C51 COMPILER V9.01   OLED                                                                  10/31/2018 18:52:45 PAGE 2   

  55   1      }
  56          /**********************************************
  57          // IIC Write byte
  58          **********************************************/
  59          
  60          void Write_IIC_Byte(unsigned char IIC_Byte)
  61          {
  62   1        unsigned char i;
  63   1        unsigned char m,da;
  64   1        da=IIC_Byte;
  65   1        OLED_SCLK_Clr();
  66   1        for(i=0;i<8;i++)    
  67   1        {
  68   2          m=da;
  69   2          //  OLED_SCLK_Clr();
  70   2          m=m&0x80;
  71   2          if(m==0x80)
  72   2          {OLED_SDIN_Set();}
  73   2          else OLED_SDIN_Clr();
  74   2            da=da<<1;
  75   2          OLED_SCLK_Set();
  76   2          OLED_SCLK_Clr();
  77   2          }
  78   1      
  79   1      
  80   1      }
  81          /**********************************************
  82          // IIC Write Command
  83          **********************************************/
  84          void Write_IIC_Command(unsigned char IIC_Command)
  85          {
  86   1         IIC_Start();
  87   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
  88   1        IIC_Wait_Ack(); 
  89   1         Write_IIC_Byte(0x00);      //write command
  90   1        IIC_Wait_Ack(); 
  91   1         Write_IIC_Byte(IIC_Command); 
  92   1        IIC_Wait_Ack(); 
  93   1         IIC_Stop();
  94   1      }
  95          /**********************************************
  96          // IIC Write Data
  97          **********************************************/
  98          void Write_IIC_Data(unsigned char IIC_Data)
  99          {
 100   1         IIC_Start();
 101   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 102   1        IIC_Wait_Ack(); 
 103   1         Write_IIC_Byte(0x40);      //write data
 104   1        IIC_Wait_Ack(); 
 105   1         Write_IIC_Byte(IIC_Data);
 106   1        IIC_Wait_Ack(); 
 107   1         IIC_Stop();
 108   1      }
 109          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 110          {
 111   1        if(cmd)
 112   1            {
 113   2      
 114   2         Write_IIC_Data(dat);
 115   2         
 116   2          }
C51 COMPILER V9.01   OLED                                                                  10/31/2018 18:52:45 PAGE 3   

 117   1        else {
 118   2         Write_IIC_Command(dat);
 119   2          
 120   2        }
 121   1      
 122   1      
 123   1      }
 124          
 125          
 126          //坐标设置
 127          
 128          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 129          {   
 130   1        OLED_WR_Byte(0xb0+y, OLED_CMD);
 131   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10, OLED_CMD);
 132   1        OLED_WR_Byte((x&0x0f), OLED_CMD); 
 133   1      }   
 134              
 135          //开启OLED显示    
 136          void OLED_Display_On(void)
 137          {
 138   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 139   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 140   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 141   1      }
 142          //关闭OLED显示     
 143          void OLED_Display_Off(void)
 144          {
 145   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 146   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 147   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 148   1      }            
 149          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 150          void OLED_Clear(void)  
 151          {  
 152   1        u8 i,n;       
 153   1        for(i=0;i<8;i++)  
 154   1        {  
 155   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 156   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 157   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 158   2          for(n=0;n<128;n++)
 159   2            OLED_WR_Byte(0,OLED_DATA); 
 160   2        } //更新显示
 161   1      }
 162          void OLED_On(void)  
 163          {  
 164   1        u8 i,n;       
 165   1        for(i=0;i<8;i++)  
 166   1        {  
 167   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 168   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 169   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 170   2          for(n=0;n<128;n++)
 171   2            OLED_WR_Byte(0x00, OLED_DATA); 
 172   2        } //更新显示
 173   1      }
 174          //在指定位置显示一个字符,包括部分字符
 175          //x:0~127
 176          //y:0~63
 177          //mode:0,反白显示;1,正常显示         
 178          //size:选择字体 16/12 
C51 COMPILER V9.01   OLED                                                                  10/31/2018 18:52:45 PAGE 4   

 179          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 180          {       
 181   1        unsigned char c = 0, i = 0;
 182   1          
 183   1        c = chr - ' ';    //得到偏移后的值      
 184   1        if (x > Max_Column-1)
 185   1        {
 186   2          x = 0;
 187   2          y = y + 2;
 188   2        }
 189   1        if (Char_Size == 16)
 190   1        {
 191   2          OLED_Set_Pos(x, y); 
 192   2          for(i=0; i<8; i++)
 193   2            OLED_WR_Byte(F8X16[c*16+i], OLED_DATA);
 194   2          OLED_Set_Pos(x, y + 1);
 195   2          for(i=0; i<8; i++)
 196   2            OLED_WR_Byte(F8X16[c*16+i+8], OLED_DATA);
 197   2        }
 198   1        else 
 199   1        { 
 200   2          OLED_Set_Pos(x, y);
 201   2          for(i=0; i<6; i++)
 202   2            OLED_WR_Byte(F6x8[c][i], OLED_DATA);  
 203   2        }
 204   1      }
 205                    
 206          
 207          //显示一个字符号串
 208          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 209          {
 210   1        unsigned char j=0;
 211   1        while (chr[j]!='\0')
 212   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 213   2            x+=8;
 214   2          if(x>120){x=0;y+=2;}
 215   2            j++;
 216   2        }
 217   1      }
 218          //显示汉字
 219          void OLED_ShowCHinese(u8 x, u8 y, u8 no)
 220          {               
 221   1        u8 t, adder = 0;
 222   1      
 223   1        OLED_Set_Pos(x, y); 
 224   1          for(t=0;t<16;t++)
 225   1        {
 226   2          OLED_WR_Byte(Hzk[no][t], OLED_DATA);
 227   2          adder += 1;
 228   2        } 
 229   1      
 230   1        OLED_Set_Pos(x, y+1); 
 231   1          for(t=0; t<16; t++)
 232   1        { 
 233   2          OLED_WR_Byte(Hzk[no][t+16], OLED_DATA);
 234   2          adder += 1;
 235   2        }         
 236   1      }
 237          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 238          void OLED_DrawBMP(u8 x0, u8 y0, u8 x1, u8 y1, u8 BMP[])
 239          {   
C51 COMPILER V9.01   OLED                                                                  10/31/2018 18:52:45 PAGE 5   

 240   1        unsigned int j = 0;
 241   1        unsigned char x, y;
 242   1        
 243   1        for (y=y0; y<y1; y++)
 244   1        {
 245   2          OLED_Set_Pos(x0, y);
 246   2      
 247   2            for (x=x0; x<x1; x++)
 248   2            {      
 249   3              OLED_WR_Byte(BMP[j++], OLED_DATA);        
 250   3            }
 251   2        }
 252   1      } 
 253          
 254          //初始化SSD1306             
 255          void OLED_Init(void)
 256          {   
 257   1        OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 258   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 259   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 260   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 261   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 262   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 263   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 264   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 265   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 266   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 267   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 268   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 269   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 270   1        OLED_WR_Byte(0x00,OLED_CMD);//
 271   1        
 272   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 273   1        OLED_WR_Byte(0x80,OLED_CMD);//
 274   1        
 275   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 276   1        OLED_WR_Byte(0x05,OLED_CMD);//
 277   1        
 278   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 279   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 280   1        
 281   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 282   1        OLED_WR_Byte(0x12,OLED_CMD);//
 283   1        
 284   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 285   1        OLED_WR_Byte(0x30,OLED_CMD);//
 286   1        
 287   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 288   1        OLED_WR_Byte(0x14,OLED_CMD);//
 289   1        
 290   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 291   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    960    ----
   CONSTANT SIZE    =   2360    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.01   OLED                                                                  10/31/2018 18:52:45 PAGE 6   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
